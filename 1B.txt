 0:	proc  - (:root:) creates proc  0 (:init:)
Starting Shuttle with pid 1
  1:	proc  0 (:init::1) creates proc  1 (Shuttle)
  1:	proc  0 (:init::1) problem1.pml:206 (state 1)	[(run Shuttle(4,2,(1-1),0))]
Starting Shuttle with pid 2
  2:	proc  0 (:init::1) creates proc  2 (Shuttle)
  2:	proc  0 (:init::1) problem1.pml:207 (state 2)	[(run Shuttle(2,4,(1-1),1))]
Starting Shuttle with pid 3
  3:	proc  0 (:init::1) creates proc  3 (Shuttle)
  3:	proc  0 (:init::1) problem1.pml:208 (state 3)	[(run Shuttle(5,1,(2-1),2))]
Starting Shuttle with pid 4
  4:	proc  0 (:init::1) creates proc  4 (Shuttle)
  4:	proc  0 (:init::1) problem1.pml:209 (state 4)	[(run Shuttle(3,3,(3-1),3))]
  5:	proc  0 (:init::1) problem1.pml:210 (state 5)	[]
  6:	proc  0 (:init::1) problem1.pml:210 (state 6)	[first.size = 4]
  7:	proc  0 (:init::1) problem1.pml:210 (state 7)	[first.start = (1-1)]
  8:	proc  0 (:init::1) problem1.pml:210 (state 8)	[first.end = (3-1)]
  9:	proc  0 (:init::1) problem1.pml:211 (state 9)	[]
 10:	proc  0 (:init::1) problem1.pml:211 (state 10)	[second.size = 2]
 11:	proc  0 (:init::1) problem1.pml:211 (state 11)	[second.start = (2-1)]
 12:	proc  0 (:init::1) problem1.pml:211 (state 12)	[second.end = (3-1)]
Starting ShuttleManagementSystem with pid 5
 13:	proc  0 (:init::1) creates proc  5 (ShuttleManagementSystem)
 13:	proc  0 (:init::1) problem1.pml:212 (state 13)	[(run ShuttleManagementSystem(first.start,first.end,first.size,second.start,second.end,second.size))]
Starting RailwayNetwork with pid 6
 14:	proc  0 (:init::1) creates proc  6 (RailwayNetwork)
 14:	proc  0 (:init::1) problem1.pml:213 (state 14)	[(run RailwayNetwork())]
 15:	proc  5 (ShuttleManagementSystem:1) problem1.pml:37 (state 1)	[orders[0].start = first.start]
 16:	proc  5 (ShuttleManagementSystem:1) problem1.pml:37 (state 2)	[orders[0].end = first.end]
 17:	proc  5 (ShuttleManagementSystem:1) problem1.pml:37 (state 3)	[orders[0].size = first.size]
 18:	proc  5 (ShuttleManagementSystem:1) problem1.pml:38 (state 4)	[orders[1].start = second.start]
 19:	proc  5 (ShuttleManagementSystem:1) problem1.pml:38 (state 5)	[orders[1].end = second.end]
 20:	proc  5 (ShuttleManagementSystem:1) problem1.pml:38 (state 6)	[orders[1].size = second.size]
 21:	proc  5 (ShuttleManagementSystem:1) problem1.pml:40 (state 7)	[i = 0]
 22:	proc  5 (ShuttleManagementSystem:1) problem1.pml:40 (state 8)	[i = 0]
 24:	proc  5 (ShuttleManagementSystem:1) problem1.pml:40 (state 9)	[((i<=(2-1)))]
 25:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 10)	[j = 0]
 26:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 11)	[j = 0]
 28:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 12)	[((j<=(4-1)))]
Shuttle Management System: sending order 1 to shuttle 1
 29:	proc  5 (ShuttleManagementSystem:1) problem1.pml:43 (state 13)	[printf('Shuttle Management System: sending order %d to shuttle %d\\n',(i+1),(j+1))]
 30:	proc  5 (ShuttleManagementSystem:1) problem1.pml:44 (state 14)	[managementOrders[j]!orders[i].start,orders[i].end,orders[i].size]
 31:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 15)	[j = (j+1)]
 32:	proc  1 (Shuttle:1) problem1.pml:82 (state 1)	[managementOrders[id]?order.start,order.end,order.size]
Shuttle 1: processing offer for newly received order
 33:	proc  1 (Shuttle:1) problem1.pml:83 (state 2)	[printf('Shuttle %d: processing offer for newly received order\\n',(id+1))]
 35:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 12)	[((j<=(4-1)))]
Shuttle Management System: sending order 1 to shuttle 2
 36:	proc  5 (ShuttleManagementSystem:1) problem1.pml:43 (state 13)	[printf('Shuttle Management System: sending order %d to shuttle %d\\n',(i+1),(j+1))]
 37:	proc  1 (Shuttle:1) problem1.pml:85 (state 3)	[currentPosition = 0]
 38:	proc  1 (Shuttle:1) problem1.pml:87 (state 6)	[else]
 39:	proc  1 (Shuttle:1) problem1.pml:87 (state 7)	[currentPosition = currentStation]
 41:	proc  1 (Shuttle:1) problem1.pml:90 (state 10)	[distance = 0]
 42:	proc  1 (Shuttle:1) problem1.pml:92 (state 13)	[else]
 43:	proc  1 (Shuttle:1) problem1.pml:92 (state 14)	[distance = (order.start-currentPosition)]
 44:	proc  5 (ShuttleManagementSystem:1) problem1.pml:44 (state 14)	[managementOrders[j]!orders[i].start,orders[i].end,orders[i].size]
 46:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 15)	[j = (j+1)]
 48:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 12)	[((j<=(4-1)))]
 49:	proc  1 (Shuttle:1) problem1.pml:96 (state 19)	[else]
Shuttle Management System: sending order 1 to shuttle 3
 50:	proc  5 (ShuttleManagementSystem:1) problem1.pml:43 (state 13)	[printf('Shuttle Management System: sending order %d to shuttle %d\\n',(i+1),(j+1))]
 51:	proc  5 (ShuttleManagementSystem:1) problem1.pml:44 (state 14)	[managementOrders[j]!orders[i].start,orders[i].end,orders[i].size]
 52:	proc  2 (Shuttle:1) problem1.pml:82 (state 1)	[managementOrders[id]?order.start,order.end,order.size]
 53:	proc  3 (Shuttle:1) problem1.pml:82 (state 1)	[managementOrders[id]?order.start,order.end,order.size]
 54:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 15)	[j = (j+1)]
 55:	proc  1 (Shuttle:1) problem1.pml:96 (state 20)	[distance = distance]
Shuttle 3: processing offer for newly received order
 56:	proc  3 (Shuttle:1) problem1.pml:83 (state 2)	[printf('Shuttle %d: processing offer for newly received order\\n',(id+1))]
 58:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 12)	[((j<=(4-1)))]
Shuttle 2: processing offer for newly received order
 59:	proc  2 (Shuttle:1) problem1.pml:83 (state 2)	[printf('Shuttle %d: processing offer for newly received order\\n',(id+1))]
 60:	proc  2 (Shuttle:1) problem1.pml:85 (state 3)	[currentPosition = 0]
Shuttle Management System: sending order 1 to shuttle 4
 61:	proc  5 (ShuttleManagementSystem:1) problem1.pml:43 (state 13)	[printf('Shuttle Management System: sending order %d to shuttle %d\\n',(i+1),(j+1))]
 62:	proc  5 (ShuttleManagementSystem:1) problem1.pml:44 (state 14)	[managementOrders[j]!orders[i].start,orders[i].end,orders[i].size]
 63:	proc  2 (Shuttle:1) problem1.pml:87 (state 6)	[else]
 64:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 15)	[j = (j+1)]
 65:	proc  2 (Shuttle:1) problem1.pml:87 (state 7)	[currentPosition = currentStation]
 67:	proc  3 (Shuttle:1) problem1.pml:85 (state 3)	[currentPosition = 0]
 69:	proc  4 (Shuttle:1) problem1.pml:82 (state 1)	[managementOrders[id]?order.start,order.end,order.size]
Shuttle 1: start destination of the order is 0 station(s) away from its current position
 70:	proc  1 (Shuttle:1) problem1.pml:98 (state 23)	[printf('Shuttle %d: start destination of the order is %d station(s) away from its current position\\n',(id+1),distance)]
 71:	proc  3 (Shuttle:1) problem1.pml:87 (state 6)	[else]
 72:	proc  5 (ShuttleManagementSystem:1) problem1.pml:45 (state 16)	[else]
 73:	proc  3 (Shuttle:1) problem1.pml:87 (state 7)	[currentPosition = currentStation]
Shuttle 4: processing offer for newly received order
 75:	proc  4 (Shuttle:1) problem1.pml:83 (state 2)	[printf('Shuttle %d: processing offer for newly received order\\n',(id+1))]
 77:	proc  3 (Shuttle:1) problem1.pml:90 (state 10)	[distance = 0]
 78:	proc  5 (ShuttleManagementSystem:1) problem1.pml:47 (state 21)	[minCharge = 2147483647]
Shuttle 1: current load is 0, order size is 4, capacity is 4
 79:	proc  1 (Shuttle:1) problem1.pml:99 (state 24)	[printf('Shuttle %d: current load is %d, order size is %d, capacity is %d\\n',(id+1),currentLoad,order.size,capacity)]
 80:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 22)	[assignedId = 0]
 81:	proc  4 (Shuttle:1) problem1.pml:85 (state 3)	[currentPosition = 0]
 82:	proc  3 (Shuttle:1) problem1.pml:91 (state 11)	[((currentPosition>order.start))]
 83:	proc  4 (Shuttle:1) problem1.pml:87 (state 6)	[else]
 84:	proc  4 (Shuttle:1) problem1.pml:87 (state 7)	[currentPosition = currentStation]
 86:	proc  1 (Shuttle:1) problem1.pml:101 (state 25)	[]
 87:	proc  2 (Shuttle:1) problem1.pml:90 (state 10)	[distance = 0]
 88:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 23)	[j = 0]
 90:	proc  2 (Shuttle:1) problem1.pml:92 (state 13)	[else]
 91:	proc  2 (Shuttle:1) problem1.pml:92 (state 14)	[distance = (order.start-currentPosition)]
 94:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 24)	[((j<=(4-1)))]
 95:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 25)	[]
 96:	proc  4 (Shuttle:1) problem1.pml:90 (state 10)	[distance = 0]
 97:	proc  2 (Shuttle:1) problem1.pml:96 (state 19)	[else]
 98:	proc  2 (Shuttle:1) problem1.pml:96 (state 20)	[distance = distance]
 99:	proc  1 (Shuttle:1) problem1.pml:102 (state 26)	[((((currentLoad+order.size)<=capacity)&&(distance<=2)))]
Shuttle Management System: waiting for offer for order 1 from shuttle 1
100:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 26)	[printf('Shuttle Management System: waiting for offer for order %d from shuttle %d\\n',(i+1),(j+1))]
101:	proc  1 (Shuttle:1) problem1.pml:103 (state 27)	[offer.id = id]
103:	proc  3 (Shuttle:1) problem1.pml:91 (state 12)	[distance = (currentPosition-order.start)]
105:	proc  3 (Shuttle:1) problem1.pml:96 (state 19)	[else]
106:	proc  4 (Shuttle:1) problem1.pml:91 (state 11)	[((currentPosition>order.start))]
Shuttle 2: start destination of the order is 0 station(s) away from its current position
107:	proc  2 (Shuttle:1) problem1.pml:98 (state 23)	[printf('Shuttle %d: start destination of the order is %d station(s) away from its current position\\n',(id+1),distance)]
108:	proc  3 (Shuttle:1) problem1.pml:96 (state 20)	[distance = distance]
109:	proc  4 (Shuttle:1) problem1.pml:91 (state 12)	[distance = (currentPosition-order.start)]
Shuttle 2: current load is 0, order size is 4, capacity is 2
110:	proc  2 (Shuttle:1) problem1.pml:99 (state 24)	[printf('Shuttle %d: current load is %d, order size is %d, capacity is %d\\n',(id+1),currentLoad,order.size,capacity)]
113:	proc  2 (Shuttle:1) problem1.pml:101 (state 25)	[]
114:	proc  2 (Shuttle:1) problem1.pml:105 (state 31)	[else]
Shuttle 3: start destination of the order is 1 station(s) away from its current position
115:	proc  3 (Shuttle:1) problem1.pml:98 (state 23)	[printf('Shuttle %d: start destination of the order is %d station(s) away from its current position\\n',(id+1),distance)]
116:	proc  1 (Shuttle:1) problem1.pml:103 (state 28)	[offer.charge = charge]
117:	proc  1 (Shuttle:1) problem1.pml:103 (state 29)	[offer.refuse = 0]
118:	proc  2 (Shuttle:1) problem1.pml:106 (state 32)	[offer.id = id]
Shuttle 3: current load is 0, order size is 4, capacity is 5
119:	proc  3 (Shuttle:1) problem1.pml:99 (state 24)	[printf('Shuttle %d: current load is %d, order size is %d, capacity is %d\\n',(id+1),currentLoad,order.size,capacity)]
120:	proc  4 (Shuttle:1) problem1.pml:96 (state 19)	[else]
121:	proc  4 (Shuttle:1) problem1.pml:96 (state 20)	[distance = distance]
122:	proc  2 (Shuttle:1) problem1.pml:106 (state 33)	[offer.charge = charge]
124:	proc  3 (Shuttle:1) problem1.pml:101 (state 25)	[]
125:	proc  3 (Shuttle:1) problem1.pml:102 (state 26)	[((((currentLoad+order.size)<=capacity)&&(distance<=2)))]
126:	proc  3 (Shuttle:1) problem1.pml:103 (state 27)	[offer.id = id]
Shuttle 1: order accepted
127:	proc  1 (Shuttle:1) problem1.pml:104 (state 30)	[printf('Shuttle %d: order accepted\\n',(id+1))]
129:	proc  2 (Shuttle:1) problem1.pml:106 (state 34)	[offer.refuse = 1]
Shuttle 4: start destination of the order is 2 station(s) away from its current position
130:	proc  4 (Shuttle:1) problem1.pml:98 (state 23)	[printf('Shuttle %d: start destination of the order is %d station(s) away from its current position\\n',(id+1),distance)]
131:	proc  1 (Shuttle:1) problem1.pml:109 (state 38)	[shuttleOffers!offer.id,offer.charge,offer.refuse]
Shuttle 2: order refused
132:	proc  2 (Shuttle:1) problem1.pml:107 (state 35)	[printf('Shuttle %d: order refused\\n',(id+1))]
133:	proc  5 (ShuttleManagementSystem:1) problem1.pml:53 (state 27)	[shuttleOffers?offer.id,offer.charge,offer.refuse]
Shuttle 4: current load is 0, order size is 4, capacity is 3
134:	proc  4 (Shuttle:1) problem1.pml:99 (state 24)	[printf('Shuttle %d: current load is %d, order size is %d, capacity is %d\\n',(id+1),currentLoad,order.size,capacity)]
135:	proc  3 (Shuttle:1) problem1.pml:103 (state 28)	[offer.charge = charge]
137:	proc  5 (ShuttleManagementSystem:1) problem1.pml:55 (state 28)	[(((offer.charge<minCharge)&&!(offer.refuse)))]
138:	proc  4 (Shuttle:1) problem1.pml:101 (state 25)	[]
139:	proc  5 (ShuttleManagementSystem:1) problem1.pml:55 (state 29)	[minCharge = offer.charge]
140:	proc  3 (Shuttle:1) problem1.pml:103 (state 29)	[offer.refuse = 0]
141:	proc  4 (Shuttle:1) problem1.pml:105 (state 31)	[else]
142:	proc  4 (Shuttle:1) problem1.pml:106 (state 32)	[offer.id = id]
143:	proc  2 (Shuttle:1) problem1.pml:109 (state 38)	[shuttleOffers!offer.id,offer.charge,offer.refuse]
Shuttle 3: order accepted
144:	proc  3 (Shuttle:1) problem1.pml:104 (state 30)	[printf('Shuttle %d: order accepted\\n',(id+1))]
146:	proc  4 (Shuttle:1) problem1.pml:106 (state 33)	[offer.charge = charge]
147:	proc  3 (Shuttle:1) problem1.pml:109 (state 38)	[shuttleOffers!offer.id,offer.charge,offer.refuse]
148:	proc  5 (ShuttleManagementSystem:1) problem1.pml:55 (state 30)	[assignedId = offer.id]
149:	proc  4 (Shuttle:1) problem1.pml:106 (state 34)	[offer.refuse = 1]
151:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 36)	[j = (j+1)]
Shuttle 4: order refused
152:	proc  4 (Shuttle:1) problem1.pml:107 (state 35)	[printf('Shuttle %d: order refused\\n',(id+1))]
154:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 24)	[((j<=(4-1)))]
155:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 25)	[]
Shuttle Management System: waiting for offer for order 1 from shuttle 2
156:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 26)	[printf('Shuttle Management System: waiting for offer for order %d from shuttle %d\\n',(i+1),(j+1))]
157:	proc  5 (ShuttleManagementSystem:1) problem1.pml:53 (state 27)	[shuttleOffers?offer.id,offer.charge,offer.refuse]
159:	proc  5 (ShuttleManagementSystem:1) problem1.pml:56 (state 31)	[else]
160:	proc  4 (Shuttle:1) problem1.pml:109 (state 38)	[shuttleOffers!offer.id,offer.charge,offer.refuse]
161:	proc  5 (ShuttleManagementSystem:1) problem1.pml:56 (state 32)	[minCharge = minCharge]
162:	proc  5 (ShuttleManagementSystem:1) problem1.pml:56 (state 33)	[assignedId = assignedId]
164:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 36)	[j = (j+1)]
166:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 24)	[((j<=(4-1)))]
167:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 25)	[]
Shuttle Management System: waiting for offer for order 1 from shuttle 3
168:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 26)	[printf('Shuttle Management System: waiting for offer for order %d from shuttle %d\\n',(i+1),(j+1))]
169:	proc  5 (ShuttleManagementSystem:1) problem1.pml:53 (state 27)	[shuttleOffers?offer.id,offer.charge,offer.refuse]
170:	proc  5 (ShuttleManagementSystem:1) problem1.pml:55 (state 28)	[(((offer.charge<minCharge)&&!(offer.refuse)))]
171:	proc  5 (ShuttleManagementSystem:1) problem1.pml:55 (state 29)	[minCharge = offer.charge]
172:	proc  5 (ShuttleManagementSystem:1) problem1.pml:55 (state 30)	[assignedId = offer.id]
174:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 36)	[j = (j+1)]
176:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 24)	[((j<=(4-1)))]
177:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 25)	[]
Shuttle Management System: waiting for offer for order 1 from shuttle 4
178:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 26)	[printf('Shuttle Management System: waiting for offer for order %d from shuttle %d\\n',(i+1),(j+1))]
179:	proc  5 (ShuttleManagementSystem:1) problem1.pml:53 (state 27)	[shuttleOffers?offer.id,offer.charge,offer.refuse]
180:	proc  5 (ShuttleManagementSystem:1) problem1.pml:56 (state 31)	[else]
181:	proc  5 (ShuttleManagementSystem:1) problem1.pml:56 (state 32)	[minCharge = minCharge]
182:	proc  5 (ShuttleManagementSystem:1) problem1.pml:56 (state 33)	[assignedId = assignedId]
184:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 36)	[j = (j+1)]
186:	proc  5 (ShuttleManagementSystem:1) problem1.pml:58 (state 37)	[else]
Shuttle Management System: order 1 assigned to shuttle 3
188:	proc  5 (ShuttleManagementSystem:1) problem1.pml:59 (state 42)	[printf('Shuttle Management System: order %d assigned to shuttle %d\\n',(i+1),(assignedId+1))]
189:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 43)	[j = 0]
191:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 44)	[((j<=(4-1)))]
192:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 47)	[else]
193:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 48)	[]
194:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 49)	[dummy.size = -(1)]
195:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 50)	[managementOrders[j]!dummy.start,dummy.end,dummy.size]
196:	proc  1 (Shuttle:1) problem1.pml:110 (state 39)	[managementOrders[id]?order.start,order.end,order.size]
197:	proc  1 (Shuttle:1) problem1.pml:113 (state 43)	[else]
198:	proc  1 (Shuttle:1) problem1.pml:113 (state 44)	[(1)]
202:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 53)	[j = (j+1)]
204:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 44)	[((j<=(4-1)))]
205:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 47)	[else]
206:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 48)	[]
207:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 49)	[dummy.size = -(1)]
208:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 50)	[managementOrders[j]!dummy.start,dummy.end,dummy.size]
210:	proc  2 (Shuttle:1) problem1.pml:110 (state 39)	[managementOrders[id]?order.start,order.end,order.size]
211:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 53)	[j = (j+1)]
212:	proc  2 (Shuttle:1) problem1.pml:113 (state 43)	[else]
213:	proc  2 (Shuttle:1) problem1.pml:113 (state 44)	[(1)]
215:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 44)	[((j<=(4-1)))]
216:	proc  5 (ShuttleManagementSystem:1) problem1.pml:62 (state 45)	[((j==assignedId))]
217:	proc  5 (ShuttleManagementSystem:1) problem1.pml:62 (state 46)	[managementOrders[j]!orders[i].start,orders[i].end,orders[i].size]
219:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 53)	[j = (j+1)]
223:	proc  3 (Shuttle:1) problem1.pml:110 (state 39)	[managementOrders[id]?order.start,order.end,order.size]
224:	proc  3 (Shuttle:1) problem1.pml:112 (state 40)	[((order.size>=0))]
225:	proc  3 (Shuttle:1) problem1.pml:112 (state 41)	[orders!order.start,order.end,order.size]
Shuttle 3: offer accepted by management
226:	proc  3 (Shuttle:1) problem1.pml:112 (state 42)	[printf('Shuttle %d: offer accepted by management\\n',(id+1))]
227:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 44)	[((j<=(4-1)))]
230:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 47)	[else]
231:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 48)	[]
232:	proc  3 (Shuttle:1) problem1.pml:115 (state 47)	[((nempty(orders)&&!(processingOrder)))]
233:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 49)	[dummy.size = -(1)]
234:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 50)	[managementOrders[j]!dummy.start,dummy.end,dummy.size]
236:	proc  3 (Shuttle:1) problem1.pml:116 (state 48)	[orders?currentOrder.start,currentOrder.end,currentOrder.size]
237:	proc  4 (Shuttle:1) problem1.pml:110 (state 39)	[managementOrders[id]?order.start,order.end,order.size]
238:	proc  3 (Shuttle:1) problem1.pml:117 (state 49)	[processingOrder = 1]
239:	proc  3 (Shuttle:1) problem1.pml:118 (state 50)	[destination = currentOrder.start]
240:	proc  3 (Shuttle:1) problem1.pml:119 (state 51)	[travelling = 1]
241:	proc  4 (Shuttle:1) problem1.pml:113 (state 43)	[else]
242:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 53)	[j = (j+1)]
Shuttle 3: beginning new order from station 1 to station 3 with size 4
243:	proc  3 (Shuttle:1) problem1.pml:120 (state 52)	[printf('Shuttle %d: beginning new order from station %d to station %d with size %d\\n',(id+1),(currentOrder.start+1),(currentOrder.end+1),currentOrder.size)]
245:	proc  3 (Shuttle:1) problem1.pml:124 (state 56)	[else]
246:	proc  5 (ShuttleManagementSystem:1) problem1.pml:65 (state 54)	[else]
248:	proc  5 (ShuttleManagementSystem:1) problem1.pml:40 (state 59)	[i = (i+1)]
250:	proc  4 (Shuttle:1) problem1.pml:113 (state 44)	[(1)]
253:	proc  3 (Shuttle:1) problem1.pml:124 (state 57)	[direction = -(1)]
Shuttle 3: travelling right to left
254:	proc  3 (Shuttle:1) problem1.pml:124 (state 58)	[printf('Shuttle %d: travelling right to left\\n',(id+1))]
255:	proc  5 (ShuttleManagementSystem:1) problem1.pml:40 (state 9)	[((i<=(2-1)))]
257:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 10)	[j = 0]
259:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 11)	[j = 0]
261:	proc  3 (Shuttle:1) problem1.pml:126 (state 61)	[((travelling&&processingOrder))]
262:	proc  3 (Shuttle:1) problem1.pml:128 (state 62)	[nextStation = 0]
263:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 12)	[((j<=(4-1)))]
264:	proc  3 (Shuttle:1) problem1.pml:128 (state 63)	[nextStation = (currentStation+direction)]
Shuttle Management System: sending order 2 to shuttle 1
265:	proc  5 (ShuttleManagementSystem:1) problem1.pml:43 (state 13)	[printf('Shuttle Management System: sending order %d to shuttle %d\\n',(i+1),(j+1))]
266:	proc  5 (ShuttleManagementSystem:1) problem1.pml:44 (state 14)	[managementOrders[j]!orders[i].start,orders[i].end,orders[i].size]
267:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 15)	[j = (j+1)]
268:	proc  3 (Shuttle:1) problem1.pml:132 (state 68)	[else]
270:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 12)	[((j<=(4-1)))]
Shuttle Management System: sending order 2 to shuttle 2
271:	proc  5 (ShuttleManagementSystem:1) problem1.pml:43 (state 13)	[printf('Shuttle Management System: sending order %d to shuttle %d\\n',(i+1),(j+1))]
272:	proc  3 (Shuttle:1) problem1.pml:132 (state 69)	[(1)]
274:	proc  1 (Shuttle:1) problem1.pml:82 (state 1)	[managementOrders[id]?order.start,order.end,order.size]
Shuttle 1: processing offer for newly received order
275:	proc  1 (Shuttle:1) problem1.pml:83 (state 2)	[printf('Shuttle %d: processing offer for newly received order\\n',(id+1))]
276:	proc  5 (ShuttleManagementSystem:1) problem1.pml:44 (state 14)	[managementOrders[j]!orders[i].start,orders[i].end,orders[i].size]
277:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 15)	[j = (j+1)]
278:	proc  3 (Shuttle:1) problem1.pml:135 (state 72)	[]
279:	proc  2 (Shuttle:1) problem1.pml:82 (state 1)	[managementOrders[id]?order.start,order.end,order.size]
280:	proc  3 (Shuttle:1) problem1.pml:135 (state 73)	[request.id = id]
281:	proc  1 (Shuttle:1) problem1.pml:85 (state 3)	[currentPosition = 0]
282:	proc  3 (Shuttle:1) problem1.pml:135 (state 74)	[request.direction = direction]
Shuttle 2: processing offer for newly received order
284:	proc  2 (Shuttle:1) problem1.pml:83 (state 2)	[printf('Shuttle %d: processing offer for newly received order\\n',(id+1))]
285:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 12)	[((j<=(4-1)))]
286:	proc  2 (Shuttle:1) problem1.pml:85 (state 3)	[currentPosition = 0]
287:	proc  2 (Shuttle:1) problem1.pml:87 (state 6)	[else]
288:	proc  3 (Shuttle:1) problem1.pml:135 (state 75)	[request.track = nextStation]
Shuttle Management System: sending order 2 to shuttle 3
289:	proc  5 (ShuttleManagementSystem:1) problem1.pml:43 (state 13)	[printf('Shuttle Management System: sending order %d to shuttle %d\\n',(i+1),(j+1))]
290:	proc  1 (Shuttle:1) problem1.pml:87 (state 6)	[else]
291:	proc  1 (Shuttle:1) problem1.pml:87 (state 7)	[currentPosition = currentStation]
292:	proc  3 (Shuttle:1) problem1.pml:137 (state 76)	[]
Shuttle 3: requesting access to travel from station 2 to station 1
293:	proc  3 (Shuttle:1) problem1.pml:137 (state 77)	[printf('Shuttle %d: requesting access to travel from station %d to station %d\\n',(id+1),(currentStation+1),(nextStation+1))]
294:	proc  5 (ShuttleManagementSystem:1) problem1.pml:44 (state 14)	[managementOrders[j]!orders[i].start,orders[i].end,orders[i].size]
296:	proc  1 (Shuttle:1) problem1.pml:90 (state 10)	[distance = 0]
297:	proc  1 (Shuttle:1) problem1.pml:92 (state 13)	[else]
299:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 15)	[j = (j+1)]
300:	proc  1 (Shuttle:1) problem1.pml:92 (state 14)	[distance = (order.start-currentPosition)]
301:	proc  3 (Shuttle:1) problem1.pml:139 (state 78)	[shuttleRequests!request.track,request.direction,request.id]
303:	proc  6 (RailwayNetwork:1) problem1.pml:182 (state 1)	[shuttleRequests?request.track,request.direction,request.id]
304:	proc  6 (RailwayNetwork:1) problem1.pml:184 (state 2)	[]
305:	proc  6 (RailwayNetwork:1) problem1.pml:192 (state 13)	[else]
306:	proc  2 (Shuttle:1) problem1.pml:87 (state 7)	[currentPosition = currentStation]
307:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 12)	[((j<=(4-1)))]
308:	proc  6 (RailwayNetwork:1) problem1.pml:194 (state 14)	[(!(tracks.trackR2L[request.track]))]
Shuttle Management System: sending order 2 to shuttle 4
310:	proc  5 (ShuttleManagementSystem:1) problem1.pml:43 (state 13)	[printf('Shuttle Management System: sending order %d to shuttle %d\\n',(i+1),(j+1))]
311:	proc  5 (ShuttleManagementSystem:1) problem1.pml:44 (state 14)	[managementOrders[j]!orders[i].start,orders[i].end,orders[i].size]
312:	proc  5 (ShuttleManagementSystem:1) problem1.pml:42 (state 15)	[j = (j+1)]
313:	proc  6 (RailwayNetwork:1) problem1.pml:194 (state 15)	[tracks.trackR2L[request.track] = 1]
314:	proc  1 (Shuttle:1) problem1.pml:96 (state 19)	[else]
315:	proc  6 (RailwayNetwork:1) problem1.pml:194 (state 16)	[reply.granted = 1]
318:	proc  4 (Shuttle:1) problem1.pml:82 (state 1)	[managementOrders[id]?order.start,order.end,order.size]
319:	proc  1 (Shuttle:1) problem1.pml:96 (state 20)	[distance = distance]
Shuttle 4: processing offer for newly received order
320:	proc  4 (Shuttle:1) problem1.pml:83 (state 2)	[printf('Shuttle %d: processing offer for newly received order\\n',(id+1))]
321:	proc  2 (Shuttle:1) problem1.pml:90 (state 10)	[distance = 0]
322:	proc  5 (ShuttleManagementSystem:1) problem1.pml:45 (state 16)	[else]
323:	proc  2 (Shuttle:1) problem1.pml:92 (state 13)	[else]
324:	proc  2 (Shuttle:1) problem1.pml:92 (state 14)	[distance = (order.start-currentPosition)]
327:	proc  5 (ShuttleManagementSystem:1) problem1.pml:47 (state 21)	[minCharge = 2147483647]
Shuttle 1: start destination of the order is 1 station(s) away from its current position
328:	proc  1 (Shuttle:1) problem1.pml:98 (state 23)	[printf('Shuttle %d: start destination of the order is %d station(s) away from its current position\\n',(id+1),distance)]
Shuttle 1: current load is 0, order size is 2, capacity is 4
329:	proc  1 (Shuttle:1) problem1.pml:99 (state 24)	[printf('Shuttle %d: current load is %d, order size is %d, capacity is %d\\n',(id+1),currentLoad,order.size,capacity)]
331:	proc  1 (Shuttle:1) problem1.pml:101 (state 25)	[]
332:	proc  4 (Shuttle:1) problem1.pml:85 (state 3)	[currentPosition = 0]
333:	proc  1 (Shuttle:1) problem1.pml:102 (state 26)	[((((currentLoad+order.size)<=capacity)&&(distance<=2)))]
334:	proc  2 (Shuttle:1) problem1.pml:96 (state 19)	[else]
335:	proc  1 (Shuttle:1) problem1.pml:103 (state 27)	[offer.id = id]
336:	proc  4 (Shuttle:1) problem1.pml:87 (state 6)	[else]
337:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 22)	[assignedId = 0]
338:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 23)	[j = 0]
Railway Network: granting access to track from station 2 to station 1
339:	proc  6 (RailwayNetwork:1) problem1.pml:195 (state 17)	[printf('Railway Network: granting access to track from station %d to station %d\\n',(((request.track+1)+1)%4),((request.track+1)%4))]
340:	proc  4 (Shuttle:1) problem1.pml:87 (state 7)	[currentPosition = currentStation]
343:	proc  2 (Shuttle:1) problem1.pml:96 (state 20)	[distance = distance]
347:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 24)	[((j<=(4-1)))]
348:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 25)	[]
Shuttle Management System: waiting for offer for order 2 from shuttle 1
349:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 26)	[printf('Shuttle Management System: waiting for offer for order %d from shuttle %d\\n',(i+1),(j+1))]
350:	proc  1 (Shuttle:1) problem1.pml:103 (state 28)	[offer.charge = charge]
351:	proc  1 (Shuttle:1) problem1.pml:103 (state 29)	[offer.refuse = 0]
352:	proc  6 (RailwayNetwork:1) problem1.pml:200 (state 25)	[railwayReplies[request.id]!reply.granted]
353:	proc  3 (Shuttle:1) problem1.pml:140 (state 79)	[railwayReplies[id]?reply.granted]
Shuttle 1: order accepted
354:	proc  1 (Shuttle:1) problem1.pml:104 (state 30)	[printf('Shuttle %d: order accepted\\n',(id+1))]
Shuttle 2: start destination of the order is 1 station(s) away from its current position
355:	proc  2 (Shuttle:1) problem1.pml:98 (state 23)	[printf('Shuttle %d: start destination of the order is %d station(s) away from its current position\\n',(id+1),distance)]
Shuttle 2: current load is 0, order size is 2, capacity is 2
356:	proc  2 (Shuttle:1) problem1.pml:99 (state 24)	[printf('Shuttle %d: current load is %d, order size is %d, capacity is %d\\n',(id+1),currentLoad,order.size,capacity)]
357:	proc  3 (Shuttle:1) problem1.pml:142 (state 80)	[(reply.granted)]
358:	proc  2 (Shuttle:1) problem1.pml:101 (state 25)	[]
360:	proc  4 (Shuttle:1) problem1.pml:90 (state 10)	[distance = 0]
363:	proc  4 (Shuttle:1) problem1.pml:91 (state 11)	[((currentPosition>order.start))]
Shuttle 3: travelling from station 2 to station 1
364:	proc  3 (Shuttle:1) problem1.pml:146 (state 89)	[printf('Shuttle %d: travelling from station %d to station %d\\n',(id+1),(currentStation+1),(nextStation+1))]
365:	proc  1 (Shuttle:1) problem1.pml:109 (state 38)	[shuttleOffers!offer.id,offer.charge,offer.refuse]
366:	proc  3 (Shuttle:1) problem1.pml:147 (state 90)	[currentStation = nextStation]
367:	proc  4 (Shuttle:1) problem1.pml:91 (state 12)	[distance = (currentPosition-order.start)]
368:	proc  5 (ShuttleManagementSystem:1) problem1.pml:53 (state 27)	[shuttleOffers?offer.id,offer.charge,offer.refuse]
369:	proc  2 (Shuttle:1) problem1.pml:102 (state 26)	[((((currentLoad+order.size)<=capacity)&&(distance<=2)))]
371:	proc  2 (Shuttle:1) problem1.pml:103 (state 27)	[offer.id = id]
372:	proc  5 (ShuttleManagementSystem:1) problem1.pml:55 (state 28)	[(((offer.charge<minCharge)&&!(offer.refuse)))]
373:	proc  3 (Shuttle:1) problem1.pml:150 (state 93)	[((direction==-(1)))]
374:	proc  3 (Shuttle:1) problem1.pml:150 (state 94)	[tracks.trackR2L[request.track] = 0]
375:	proc  2 (Shuttle:1) problem1.pml:103 (state 28)	[offer.charge = charge]
377:	proc  3 (Shuttle:1) problem1.pml:153 (state 97)	[((currentStation==destination))]
378:	proc  3 (Shuttle:1) problem1.pml:153 (state 98)	[travelling = 0]
379:	proc  5 (ShuttleManagementSystem:1) problem1.pml:55 (state 29)	[minCharge = offer.charge]
380:	proc  2 (Shuttle:1) problem1.pml:103 (state 29)	[offer.refuse = 0]
Shuttle 2: order accepted
381:	proc  2 (Shuttle:1) problem1.pml:104 (state 30)	[printf('Shuttle %d: order accepted\\n',(id+1))]
383:	proc  4 (Shuttle:1) problem1.pml:96 (state 19)	[else]
385:	proc  2 (Shuttle:1) problem1.pml:109 (state 38)	[shuttleOffers!offer.id,offer.charge,offer.refuse]
386:	proc  5 (ShuttleManagementSystem:1) problem1.pml:55 (state 30)	[assignedId = offer.id]
388:	proc  4 (Shuttle:1) problem1.pml:96 (state 20)	[distance = distance]
391:	proc  3 (Shuttle:1) problem1.pml:156 (state 103)	[((!(travelling)&&processingOrder))]
392:	proc  3 (Shuttle:1) problem1.pml:158 (state 104)	[((destination==currentOrder.start))]
Shuttle 3: loading 4 people at station 1
393:	proc  3 (Shuttle:1) problem1.pml:159 (state 105)	[printf('Shuttle %d: loading %d people at station %d\\n',(id+1),currentOrder.size,(currentOrder.start+1))]
394:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 36)	[j = (j+1)]
396:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 24)	[((j<=(4-1)))]
397:	proc  3 (Shuttle:1) problem1.pml:160 (state 106)	[currentLoad = (currentLoad+currentOrder.size)]
Shuttle 4: start destination of the order is 1 station(s) away from its current position
398:	proc  4 (Shuttle:1) problem1.pml:98 (state 23)	[printf('Shuttle %d: start destination of the order is %d station(s) away from its current position\\n',(id+1),distance)]
399:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 25)	[]
Shuttle 4: current load is 0, order size is 2, capacity is 3
400:	proc  4 (Shuttle:1) problem1.pml:99 (state 24)	[printf('Shuttle %d: current load is %d, order size is %d, capacity is %d\\n',(id+1),currentLoad,order.size,capacity)]
401:	proc  4 (Shuttle:1) problem1.pml:101 (state 25)	[]
Shuttle Management System: waiting for offer for order 2 from shuttle 2
402:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 26)	[printf('Shuttle Management System: waiting for offer for order %d from shuttle %d\\n',(i+1),(j+1))]
403:	proc  3 (Shuttle:1) problem1.pml:161 (state 107)	[destination = currentOrder.end]
404:	proc  4 (Shuttle:1) problem1.pml:102 (state 26)	[((((currentLoad+order.size)<=capacity)&&(distance<=2)))]
405:	proc  5 (ShuttleManagementSystem:1) problem1.pml:53 (state 27)	[shuttleOffers?offer.id,offer.charge,offer.refuse]
406:	proc  3 (Shuttle:1) problem1.pml:162 (state 108)	[travelling = 1]
407:	proc  3 (Shuttle:1) problem1.pml:164 (state 109)	[(((currentOrder.start>=currentStation)&&((currentOrder.start-currentStation)<(4/2))))]
408:	proc  4 (Shuttle:1) problem1.pml:103 (state 27)	[offer.id = id]
409:	proc  3 (Shuttle:1) problem1.pml:165 (state 110)	[direction = 1]
Shuttle 3: travelling left to right
410:	proc  3 (Shuttle:1) problem1.pml:165 (state 111)	[printf('Shuttle %d: travelling left to right\\n',(id+1))]
411:	proc  4 (Shuttle:1) problem1.pml:103 (state 28)	[offer.charge = charge]
412:	proc  5 (ShuttleManagementSystem:1) problem1.pml:56 (state 31)	[else]
413:	proc  4 (Shuttle:1) problem1.pml:103 (state 29)	[offer.refuse = 0]
417:	proc  5 (ShuttleManagementSystem:1) problem1.pml:56 (state 32)	[minCharge = minCharge]
418:	proc  5 (ShuttleManagementSystem:1) problem1.pml:56 (state 33)	[assignedId = assignedId]
Shuttle 4: order accepted
419:	proc  4 (Shuttle:1) problem1.pml:104 (state 30)	[printf('Shuttle %d: order accepted\\n',(id+1))]
421:	proc  3 (Shuttle:1) problem1.pml:82 (state 1)	[managementOrders[id]?order.start,order.end,order.size]
Shuttle 3: processing offer for newly received order
423:	proc  3 (Shuttle:1) problem1.pml:83 (state 2)	[printf('Shuttle %d: processing offer for newly received order\\n',(id+1))]
424:	proc  4 (Shuttle:1) problem1.pml:109 (state 38)	[shuttleOffers!offer.id,offer.charge,offer.refuse]
425:	proc  3 (Shuttle:1) problem1.pml:85 (state 3)	[currentPosition = 0]
426:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 36)	[j = (j+1)]
428:	proc  3 (Shuttle:1) problem1.pml:86 (state 4)	[(travelling)]
429:	proc  3 (Shuttle:1) problem1.pml:86 (state 5)	[currentPosition = (currentStation+direction)]
431:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 24)	[((j<=(4-1)))]
432:	proc  3 (Shuttle:1) problem1.pml:90 (state 10)	[distance = 0]
433:	proc  3 (Shuttle:1) problem1.pml:92 (state 13)	[else]
434:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 25)	[]
Shuttle Management System: waiting for offer for order 2 from shuttle 3
435:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 26)	[printf('Shuttle Management System: waiting for offer for order %d from shuttle %d\\n',(i+1),(j+1))]
436:	proc  5 (ShuttleManagementSystem:1) problem1.pml:53 (state 27)	[shuttleOffers?offer.id,offer.charge,offer.refuse]
437:	proc  5 (ShuttleManagementSystem:1) problem1.pml:56 (state 31)	[else]
438:	proc  3 (Shuttle:1) problem1.pml:92 (state 14)	[distance = (order.start-currentPosition)]
440:	proc  5 (ShuttleManagementSystem:1) problem1.pml:56 (state 32)	[minCharge = minCharge]
441:	proc  3 (Shuttle:1) problem1.pml:96 (state 19)	[else]
442:	proc  3 (Shuttle:1) problem1.pml:96 (state 20)	[distance = distance]
Shuttle 3: start destination of the order is 0 station(s) away from its current position
444:	proc  3 (Shuttle:1) problem1.pml:98 (state 23)	[printf('Shuttle %d: start destination of the order is %d station(s) away from its current position\\n',(id+1),distance)]
Shuttle 3: current load is 4, order size is 2, capacity is 5
445:	proc  3 (Shuttle:1) problem1.pml:99 (state 24)	[printf('Shuttle %d: current load is %d, order size is %d, capacity is %d\\n',(id+1),currentLoad,order.size,capacity)]
446:	proc  5 (ShuttleManagementSystem:1) problem1.pml:56 (state 33)	[assignedId = assignedId]
447:	proc  3 (Shuttle:1) problem1.pml:101 (state 25)	[]
449:	proc  3 (Shuttle:1) problem1.pml:105 (state 31)	[else]
450:	proc  3 (Shuttle:1) problem1.pml:106 (state 32)	[offer.id = id]
451:	proc  3 (Shuttle:1) problem1.pml:106 (state 33)	[offer.charge = charge]
452:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 36)	[j = (j+1)]
453:	proc  3 (Shuttle:1) problem1.pml:106 (state 34)	[offer.refuse = 1]
Shuttle 3: order refused
454:	proc  3 (Shuttle:1) problem1.pml:107 (state 35)	[printf('Shuttle %d: order refused\\n',(id+1))]
456:	proc  3 (Shuttle:1) problem1.pml:109 (state 38)	[shuttleOffers!offer.id,offer.charge,offer.refuse]
458:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 24)	[((j<=(4-1)))]
459:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 25)	[]
Shuttle Management System: waiting for offer for order 2 from shuttle 4
460:	proc  5 (ShuttleManagementSystem:1) problem1.pml:52 (state 26)	[printf('Shuttle Management System: waiting for offer for order %d from shuttle %d\\n',(i+1),(j+1))]
461:	proc  5 (ShuttleManagementSystem:1) problem1.pml:53 (state 27)	[shuttleOffers?offer.id,offer.charge,offer.refuse]
462:	proc  5 (ShuttleManagementSystem:1) problem1.pml:56 (state 31)	[else]
463:	proc  5 (ShuttleManagementSystem:1) problem1.pml:56 (state 32)	[minCharge = minCharge]
464:	proc  5 (ShuttleManagementSystem:1) problem1.pml:56 (state 33)	[assignedId = assignedId]
466:	proc  5 (ShuttleManagementSystem:1) problem1.pml:50 (state 36)	[j = (j+1)]
468:	proc  5 (ShuttleManagementSystem:1) problem1.pml:58 (state 37)	[else]
Shuttle Management System: order 2 assigned to shuttle 1
470:	proc  5 (ShuttleManagementSystem:1) problem1.pml:59 (state 42)	[printf('Shuttle Management System: order %d assigned to shuttle %d\\n',(i+1),(assignedId+1))]
471:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 43)	[j = 0]
473:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 44)	[((j<=(4-1)))]
474:	proc  5 (ShuttleManagementSystem:1) problem1.pml:62 (state 45)	[((j==assignedId))]
475:	proc  5 (ShuttleManagementSystem:1) problem1.pml:62 (state 46)	[managementOrders[j]!orders[i].start,orders[i].end,orders[i].size]
477:	proc  1 (Shuttle:1) problem1.pml:110 (state 39)	[managementOrders[id]?order.start,order.end,order.size]
478:	proc  1 (Shuttle:1) problem1.pml:112 (state 40)	[((order.size>=0))]
479:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 53)	[j = (j+1)]
481:	proc  1 (Shuttle:1) problem1.pml:112 (state 41)	[orders!order.start,order.end,order.size]
Shuttle 1: offer accepted by management
482:	proc  1 (Shuttle:1) problem1.pml:112 (state 42)	[printf('Shuttle %d: offer accepted by management\\n',(id+1))]
484:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 44)	[((j<=(4-1)))]
486:	proc  1 (Shuttle:1) problem1.pml:115 (state 47)	[((nempty(orders)&&!(processingOrder)))]
487:	proc  1 (Shuttle:1) problem1.pml:116 (state 48)	[orders?currentOrder.start,currentOrder.end,currentOrder.size]
488:	proc  1 (Shuttle:1) problem1.pml:117 (state 49)	[processingOrder = 1]
489:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 47)	[else]
490:	proc  1 (Shuttle:1) problem1.pml:118 (state 50)	[destination = currentOrder.start]
491:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 48)	[]
492:	proc  1 (Shuttle:1) problem1.pml:119 (state 51)	[travelling = 1]
493:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 49)	[dummy.size = -(1)]
494:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 50)	[managementOrders[j]!dummy.start,dummy.end,dummy.size]
496:	proc  2 (Shuttle:1) problem1.pml:110 (state 39)	[managementOrders[id]?order.start,order.end,order.size]
497:	proc  2 (Shuttle:1) problem1.pml:113 (state 43)	[else]
498:	proc  2 (Shuttle:1) problem1.pml:113 (state 44)	[(1)]
501:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 53)	[j = (j+1)]
503:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 44)	[((j<=(4-1)))]
Shuttle 1: beginning new order from station 2 to station 3 with size 2
504:	proc  1 (Shuttle:1) problem1.pml:120 (state 52)	[printf('Shuttle %d: beginning new order from station %d to station %d with size %d\\n',(id+1),(currentOrder.start+1),(currentOrder.end+1),currentOrder.size)]
505:	proc  1 (Shuttle:1) problem1.pml:122 (state 53)	[(((currentOrder.start>=currentStation)&&((currentOrder.start-currentStation)<(4/2))))]
506:	proc  1 (Shuttle:1) problem1.pml:123 (state 54)	[direction = 1]
507:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 47)	[else]
Shuttle 1: travelling left to right
508:	proc  1 (Shuttle:1) problem1.pml:123 (state 55)	[printf('Shuttle %d: travelling left to right\\n',(id+1))]
510:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 48)	[]
512:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 49)	[dummy.size = -(1)]
513:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 50)	[managementOrders[j]!dummy.start,dummy.end,dummy.size]
514:	proc  3 (Shuttle:1) problem1.pml:110 (state 39)	[managementOrders[id]?order.start,order.end,order.size]
515:	proc  3 (Shuttle:1) problem1.pml:113 (state 43)	[else]
517:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 53)	[j = (j+1)]
518:	proc  1 (Shuttle:1) problem1.pml:126 (state 61)	[((travelling&&processingOrder))]
519:	proc  1 (Shuttle:1) problem1.pml:128 (state 62)	[nextStation = 0]
521:	proc  1 (Shuttle:1) problem1.pml:128 (state 63)	[nextStation = (currentStation+direction)]
522:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 44)	[((j<=(4-1)))]
523:	proc  1 (Shuttle:1) problem1.pml:132 (state 68)	[else]
524:	proc  1 (Shuttle:1) problem1.pml:132 (state 69)	[(1)]
526:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 47)	[else]
527:	proc  1 (Shuttle:1) problem1.pml:135 (state 72)	[]
528:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 48)	[]
529:	proc  1 (Shuttle:1) problem1.pml:135 (state 73)	[request.id = id]
530:	proc  3 (Shuttle:1) problem1.pml:113 (state 44)	[(1)]
531:	proc  1 (Shuttle:1) problem1.pml:135 (state 74)	[request.direction = direction]
533:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 49)	[dummy.size = -(1)]
535:	proc  1 (Shuttle:1) problem1.pml:135 (state 75)	[request.track = nextStation]
536:	proc  5 (ShuttleManagementSystem:1) problem1.pml:63 (state 50)	[managementOrders[j]!dummy.start,dummy.end,dummy.size]
537:	proc  4 (Shuttle:1) problem1.pml:110 (state 39)	[managementOrders[id]?order.start,order.end,order.size]
538:	proc  3 (Shuttle:1) problem1.pml:126 (state 61)	[((travelling&&processingOrder))]
539:	proc  1 (Shuttle:1) problem1.pml:137 (state 76)	[]
540:	proc  3 (Shuttle:1) problem1.pml:128 (state 62)	[nextStation = 0]
Shuttle 1: requesting access to travel from station 1 to station 2
541:	proc  1 (Shuttle:1) problem1.pml:137 (state 77)	[printf('Shuttle %d: requesting access to travel from station %d to station %d\\n',(id+1),(currentStation+1),(nextStation+1))]
542:	proc  4 (Shuttle:1) problem1.pml:113 (state 43)	[else]
543:	proc  4 (Shuttle:1) problem1.pml:113 (state 44)	[(1)]
544:	proc  3 (Shuttle:1) problem1.pml:128 (state 63)	[nextStation = (currentStation+direction)]
545:	proc  3 (Shuttle:1) problem1.pml:132 (state 68)	[else]
548:	proc  5 (ShuttleManagementSystem:1) problem1.pml:60 (state 53)	[j = (j+1)]
549:	proc  3 (Shuttle:1) problem1.pml:132 (state 69)	[(1)]
552:	proc  3 (Shuttle:1) problem1.pml:135 (state 72)	[]
553:	proc  3 (Shuttle:1) problem1.pml:135 (state 73)	[request.id = id]
555:	proc  3 (Shuttle:1) problem1.pml:135 (state 74)	[request.direction = direction]
556:	proc  3 (Shuttle:1) problem1.pml:135 (state 75)	[request.track = nextStation]
557:	proc  5 (ShuttleManagementSystem:1) problem1.pml:65 (state 54)	[else]
559:	proc  1 (Shuttle:1) problem1.pml:139 (state 78)	[shuttleRequests!request.track,request.direction,request.id]
560:	proc  6 (RailwayNetwork:1) problem1.pml:182 (state 1)	[shuttleRequests?request.track,request.direction,request.id]
562:	proc  5 (ShuttleManagementSystem:1) problem1.pml:40 (state 59)	[i = (i+1)]
564:	proc  3 (Shuttle:1) problem1.pml:137 (state 76)	[]
Shuttle 3: requesting access to travel from station 1 to station 2
565:	proc  3 (Shuttle:1) problem1.pml:137 (state 77)	[printf('Shuttle %d: requesting access to travel from station %d to station %d\\n',(id+1),(currentStation+1),(nextStation+1))]
566:	proc  5 (ShuttleManagementSystem:1) problem1.pml:66 (state 60)	[else]
568:	proc  6 (RailwayNetwork:1) problem1.pml:184 (state 2)	[]
569:	proc  6 (RailwayNetwork:1) problem1.pml:185 (state 3)	[((request.direction==1))]
570:	proc  6 (RailwayNetwork:1) problem1.pml:187 (state 4)	[(!(tracks.trackL2R[request.track]))]
571:	proc  6 (RailwayNetwork:1) problem1.pml:187 (state 5)	[tracks.trackL2R[request.track] = 1]
573:	proc  6 (RailwayNetwork:1) problem1.pml:187 (state 6)	[reply.granted = 1]
Railway Network: granting access to track from station 1 to station 2
574:	proc  6 (RailwayNetwork:1) problem1.pml:188 (state 7)	[printf('Railway Network: granting access to track from station %d to station %d\\n',request.track,((request.track+1)%4))]
575:	proc  3 (Shuttle:1) problem1.pml:139 (state 78)	[shuttleRequests!request.track,request.direction,request.id]
578:	proc  6 (RailwayNetwork:1) problem1.pml:200 (state 25)	[railwayReplies[request.id]!reply.granted]
579:	proc  1 (Shuttle:1) problem1.pml:140 (state 79)	[railwayReplies[id]?reply.granted]
581:	proc  1 (Shuttle:1) problem1.pml:142 (state 80)	[(reply.granted)]
583:	proc  6 (RailwayNetwork:1) problem1.pml:182 (state 1)	[shuttleRequests?request.track,request.direction,request.id]
Shuttle 1: travelling from station 1 to station 2
584:	proc  1 (Shuttle:1) problem1.pml:146 (state 89)	[printf('Shuttle %d: travelling from station %d to station %d\\n',(id+1),(currentStation+1),(nextStation+1))]
585:	proc  1 (Shuttle:1) problem1.pml:147 (state 90)	[currentStation = nextStation]
586:	proc  6 (RailwayNetwork:1) problem1.pml:184 (state 2)	[]
587:	proc  1 (Shuttle:1) problem1.pml:149 (state 91)	[((direction==1))]
588:	proc  6 (RailwayNetwork:1) problem1.pml:185 (state 3)	[((request.direction==1))]
589:	proc  6 (RailwayNetwork:1) problem1.pml:189 (state 8)	[else]
590:	proc  1 (Shuttle:1) problem1.pml:149 (state 92)	[tracks.trackL2R[request.track] = 0]
592:	proc  1 (Shuttle:1) problem1.pml:153 (state 97)	[((currentStation==destination))]
593:	proc  1 (Shuttle:1) problem1.pml:153 (state 98)	[travelling = 0]
595:	proc  6 (RailwayNetwork:1) problem1.pml:189 (state 9)	[reply.granted = 0]
597:	proc  1 (Shuttle:1) problem1.pml:156 (state 103)	[((!(travelling)&&processingOrder))]
Railway Network: rejecting access to track from station 1 to station 2
598:	proc  6 (RailwayNetwork:1) problem1.pml:190 (state 10)	[printf('Railway Network: rejecting access to track from station %d to station %d\\n',request.track,((request.track+1)%4))]
600:	proc  1 (Shuttle:1) problem1.pml:158 (state 104)	[((destination==currentOrder.start))]
Shuttle 1: loading 2 people at station 2
601:	proc  1 (Shuttle:1) problem1.pml:159 (state 105)	[printf('Shuttle %d: loading %d people at station %d\\n',(id+1),currentOrder.size,(currentOrder.start+1))]
603:	proc  1 (Shuttle:1) problem1.pml:160 (state 106)	[currentLoad = (currentLoad+currentOrder.size)]
604:	proc  1 (Shuttle:1) problem1.pml:161 (state 107)	[destination = currentOrder.end]
605:	proc  1 (Shuttle:1) problem1.pml:162 (state 108)	[travelling = 1]
606:	proc  6 (RailwayNetwork:1) problem1.pml:200 (state 25)	[railwayReplies[request.id]!reply.granted]
607:	proc  3 (Shuttle:1) problem1.pml:140 (state 79)	[railwayReplies[id]?reply.granted]
609:	proc  3 (Shuttle:1) problem1.pml:143 (state 82)	[else]
610:	proc  1 (Shuttle:1) problem1.pml:164 (state 109)	[(((currentOrder.start>=currentStation)&&((currentOrder.start-currentStation)<(4/2))))]
611:	proc  1 (Shuttle:1) problem1.pml:165 (state 110)	[direction = 1]
612:	proc  3 (Shuttle:1) problem1.pml:143 (state 83)	[(1)]
Shuttle 1: travelling left to right
614:	proc  1 (Shuttle:1) problem1.pml:165 (state 111)	[printf('Shuttle %d: travelling left to right\\n',(id+1))]
619:	proc  1 (Shuttle:1) problem1.pml:126 (state 61)	[((travelling&&processingOrder))]
620:	proc  1 (Shuttle:1) problem1.pml:128 (state 62)	[nextStation = 0]
621:	proc  1 (Shuttle:1) problem1.pml:128 (state 63)	[nextStation = (currentStation+direction)]
622:	proc  3 (Shuttle:1) problem1.pml:139 (state 78)	[shuttleRequests!request.track,request.direction,request.id]
623:	proc  1 (Shuttle:1) problem1.pml:132 (state 68)	[else]
624:	proc  1 (Shuttle:1) problem1.pml:132 (state 69)	[(1)]
626:	proc  1 (Shuttle:1) problem1.pml:135 (state 72)	[]
627:	proc  1 (Shuttle:1) problem1.pml:135 (state 73)	[request.id = id]
628:	proc  1 (Shuttle:1) problem1.pml:135 (state 74)	[request.direction = direction]
629:	proc  6 (RailwayNetwork:1) problem1.pml:182 (state 1)	[shuttleRequests?request.track,request.direction,request.id]
630:	proc  1 (Shuttle:1) problem1.pml:135 (state 75)	[request.track = nextStation]
631:	proc  1 (Shuttle:1) problem1.pml:137 (state 76)	[]
632:	proc  6 (RailwayNetwork:1) problem1.pml:184 (state 2)	[]
Shuttle 1: requesting access to travel from station 2 to station 3
633:	proc  1 (Shuttle:1) problem1.pml:137 (state 77)	[printf('Shuttle %d: requesting access to travel from station %d to station %d\\n',(id+1),(currentStation+1),(nextStation+1))]
634:	proc  6 (RailwayNetwork:1) problem1.pml:185 (state 3)	[((request.direction==1))]
635:	proc  6 (RailwayNetwork:1) problem1.pml:187 (state 4)	[(!(tracks.trackL2R[request.track]))]
636:	proc  6 (RailwayNetwork:1) problem1.pml:187 (state 5)	[tracks.trackL2R[request.track] = 1]
637:	proc  6 (RailwayNetwork:1) problem1.pml:187 (state 6)	[reply.granted = 1]
639:	proc  1 (Shuttle:1) problem1.pml:139 (state 78)	[shuttleRequests!request.track,request.direction,request.id]
Railway Network: granting access to track from station 1 to station 2
640:	proc  6 (RailwayNetwork:1) problem1.pml:188 (state 7)	[printf('Railway Network: granting access to track from station %d to station %d\\n',request.track,((request.track+1)%4))]
643:	proc  6 (RailwayNetwork:1) problem1.pml:200 (state 25)	[railwayReplies[request.id]!reply.granted]
645:	proc  6 (RailwayNetwork:1) problem1.pml:182 (state 1)	[shuttleRequests?request.track,request.direction,request.id]
646:	proc  6 (RailwayNetwork:1) problem1.pml:184 (state 2)	[]
647:	proc  6 (RailwayNetwork:1) problem1.pml:185 (state 3)	[((request.direction==1))]
648:	proc  6 (RailwayNetwork:1) problem1.pml:187 (state 4)	[(!(tracks.trackL2R[request.track]))]
649:	proc  3 (Shuttle:1) problem1.pml:140 (state 79)	[railwayReplies[id]?reply.granted]
650:	proc  3 (Shuttle:1) problem1.pml:142 (state 80)	[(reply.granted)]
652:	proc  6 (RailwayNetwork:1) problem1.pml:187 (state 5)	[tracks.trackL2R[request.track] = 1]
Shuttle 3: travelling from station 1 to station 2
653:	proc  3 (Shuttle:1) problem1.pml:146 (state 89)	[printf('Shuttle %d: travelling from station %d to station %d\\n',(id+1),(currentStation+1),(nextStation+1))]
654:	proc  3 (Shuttle:1) problem1.pml:147 (state 90)	[currentStation = nextStation]
655:	proc  3 (Shuttle:1) problem1.pml:149 (state 91)	[((direction==1))]
656:	proc  6 (RailwayNetwork:1) problem1.pml:187 (state 6)	[reply.granted = 1]
Railway Network: granting access to track from station 2 to station 3
657:	proc  6 (RailwayNetwork:1) problem1.pml:188 (state 7)	[printf('Railway Network: granting access to track from station %d to station %d\\n',request.track,((request.track+1)%4))]
659:	proc  3 (Shuttle:1) problem1.pml:149 (state 92)	[tracks.trackL2R[request.track] = 0]
662:	proc  6 (RailwayNetwork:1) problem1.pml:200 (state 25)	[railwayReplies[request.id]!reply.granted]
663:	proc  1 (Shuttle:1) problem1.pml:140 (state 79)	[railwayReplies[id]?reply.granted]
664:	proc  3 (Shuttle:1) problem1.pml:154 (state 99)	[else]
665:	proc  1 (Shuttle:1) problem1.pml:142 (state 80)	[(reply.granted)]
Shuttle 1: travelling from station 2 to station 3
667:	proc  1 (Shuttle:1) problem1.pml:146 (state 89)	[printf('Shuttle %d: travelling from station %d to station %d\\n',(id+1),(currentStation+1),(nextStation+1))]
668:	proc  1 (Shuttle:1) problem1.pml:147 (state 90)	[currentStation = nextStation]
669:	proc  1 (Shuttle:1) problem1.pml:149 (state 91)	[((direction==1))]
670:	proc  1 (Shuttle:1) problem1.pml:149 (state 92)	[tracks.trackL2R[request.track] = 0]
672:	proc  3 (Shuttle:1) problem1.pml:154 (state 100)	[travelling = 1]
674:	proc  1 (Shuttle:1) problem1.pml:153 (state 97)	[((currentStation==destination))]
675:	proc  1 (Shuttle:1) problem1.pml:153 (state 98)	[travelling = 0]
680:	proc  3 (Shuttle:1) problem1.pml:126 (state 61)	[((travelling&&processingOrder))]
681:	proc  3 (Shuttle:1) problem1.pml:128 (state 62)	[nextStation = 0]
682:	proc  3 (Shuttle:1) problem1.pml:128 (state 63)	[nextStation = (currentStation+direction)]
683:	proc  3 (Shuttle:1) problem1.pml:132 (state 68)	[else]
684:	proc  1 (Shuttle:1) problem1.pml:156 (state 103)	[((!(travelling)&&processingOrder))]
685:	proc  3 (Shuttle:1) problem1.pml:132 (state 69)	[(1)]
686:	proc  1 (Shuttle:1) problem1.pml:168 (state 117)	[((destination==currentOrder.end))]
688:	proc  3 (Shuttle:1) problem1.pml:135 (state 72)	[]
Shuttle 1: unloading 2 people at station 3
689:	proc  1 (Shuttle:1) problem1.pml:169 (state 118)	[printf('Shuttle %d: unloading %d people at station %d\\n',(id+1),currentOrder.size,(currentOrder.end+1))]
690:	proc  1 (Shuttle:1) problem1.pml:170 (state 119)	[currentLoad = (currentLoad-currentOrder.size)]
691:	proc  1 (Shuttle:1) problem1.pml:171 (state 120)	[processingOrder = 0]
692:	proc  3 (Shuttle:1) problem1.pml:135 (state 73)	[request.id = id]
693:	proc  3 (Shuttle:1) problem1.pml:135 (state 74)	[request.direction = direction]
695:	proc  3 (Shuttle:1) problem1.pml:135 (state 75)	[request.track = nextStation]
696:	proc  3 (Shuttle:1) problem1.pml:137 (state 76)	[]
Shuttle 3: requesting access to travel from station 2 to station 3
698:	proc  3 (Shuttle:1) problem1.pml:137 (state 77)	[printf('Shuttle %d: requesting access to travel from station %d to station %d\\n',(id+1),(currentStation+1),(nextStation+1))]
700:	proc  3 (Shuttle:1) problem1.pml:139 (state 78)	[shuttleRequests!request.track,request.direction,request.id]
701:	proc  6 (RailwayNetwork:1) problem1.pml:182 (state 1)	[shuttleRequests?request.track,request.direction,request.id]
702:	proc  6 (RailwayNetwork:1) problem1.pml:184 (state 2)	[]
703:	proc  6 (RailwayNetwork:1) problem1.pml:185 (state 3)	[((request.direction==1))]
704:	proc  6 (RailwayNetwork:1) problem1.pml:187 (state 4)	[(!(tracks.trackL2R[request.track]))]
705:	proc  6 (RailwayNetwork:1) problem1.pml:187 (state 5)	[tracks.trackL2R[request.track] = 1]
706:	proc  6 (RailwayNetwork:1) problem1.pml:187 (state 6)	[reply.granted = 1]
Railway Network: granting access to track from station 2 to station 3
707:	proc  6 (RailwayNetwork:1) problem1.pml:188 (state 7)	[printf('Railway Network: granting access to track from station %d to station %d\\n',request.track,((request.track+1)%4))]
710:	proc  6 (RailwayNetwork:1) problem1.pml:200 (state 25)	[railwayReplies[request.id]!reply.granted]
712:	proc  3 (Shuttle:1) problem1.pml:140 (state 79)	[railwayReplies[id]?reply.granted]
713:	proc  3 (Shuttle:1) problem1.pml:142 (state 80)	[(reply.granted)]
Shuttle 3: travelling from station 2 to station 3
715:	proc  3 (Shuttle:1) problem1.pml:146 (state 89)	[printf('Shuttle %d: travelling from station %d to station %d\\n',(id+1),(currentStation+1),(nextStation+1))]
716:	proc  3 (Shuttle:1) problem1.pml:147 (state 90)	[currentStation = nextStation]
717:	proc  3 (Shuttle:1) problem1.pml:149 (state 91)	[((direction==1))]
718:	proc  3 (Shuttle:1) problem1.pml:149 (state 92)	[tracks.trackL2R[request.track] = 0]
720:	proc  3 (Shuttle:1) problem1.pml:153 (state 97)	[((currentStation==destination))]
721:	proc  3 (Shuttle:1) problem1.pml:153 (state 98)	[travelling = 0]
724:	proc  3 (Shuttle:1) problem1.pml:156 (state 103)	[((!(travelling)&&processingOrder))]
725:	proc  3 (Shuttle:1) problem1.pml:168 (state 117)	[((destination==currentOrder.end))]
Shuttle 3: unloading 4 people at station 3
726:	proc  3 (Shuttle:1) problem1.pml:169 (state 118)	[printf('Shuttle %d: unloading %d people at station %d\\n',(id+1),currentOrder.size,(currentOrder.end+1))]
727:	proc  3 (Shuttle:1) problem1.pml:170 (state 119)	[currentLoad = (currentLoad-currentOrder.size)]
728:	proc  3 (Shuttle:1) problem1.pml:171 (state 120)	[processingOrder = 0]
timeout
#processes: 7
730:	proc  6 (RailwayNetwork:1) problem1.pml:181 (state 26)
730:	proc  5 (ShuttleManagementSystem:1) problem1.pml:67 (state 65)
730:	proc  4 (Shuttle:1) problem1.pml:81 (state 125)
730:	proc  3 (Shuttle:1) problem1.pml:81 (state 125)
730:	proc  2 (Shuttle:1) problem1.pml:81 (state 125)
730:	proc  1 (Shuttle:1) problem1.pml:81 (state 125)
730:	proc  0 (:init::1) problem1.pml:215 (state 16)
7 processes created